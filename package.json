{
  "name": "thegtmapp",
  "version": "1.0.0",
  "description": "GTM application",
  "scripts": {
    "start": "bash scripts/kill-port.sh && npm run dev",
    "start:docker": "docker-compose up -d && npm run docker:check",
    "start:frontend": "cd frontend && npm run dev",
    "start:backend": "cd backend && npm run dev",
    "restart": "bash scripts/kill-port.sh && npm run dev",
    "docker:check": "sh scripts/docker-check.sh",
    "docker:reset": "sh scripts/reset-docker.sh",
    "docker:rebuild": "docker-compose down && docker-compose build --no-cache && docker-compose up -d",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:frontend && npm run test:backend",
    "test:watch": "npm run test:frontend:watch && npm run test:backend:watch",
    "test:frontend": "cd frontend && npm run test",
    "test:frontend:watch": "cd frontend && npm run test:watch",
    "test:backend": "cd backend && npm run test",
    "test:backend:watch": "cd backend && npm run test:watch",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:fix": "npm run lint:frontend:fix && npm run lint:backend:fix",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "lint:backend": "cd backend && npm run lint",
    "lint:backend:fix": "cd backend && npm run lint:fix",
    "dev": "concurrently \"cd frontend && npm run dev\" \"cd backend && npm run dev\""
  },
  "dependencies": {
    "@modelcontextprotocol/server-brave-search": "^0.6.2",
    "concurrently": "^8.2.0",
    "openai": "^4.91.1"
  },
  "devDependencies": {
    "@types/pdf-parse": "^1.1.5"
  }
}
